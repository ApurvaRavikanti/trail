string[] unwanted = {
            "<script>", "<iframe>", "<embed>", "<object>",
            ".", "--", ";--", "/*", "*/", "@@",
            "nchar", "varchar", "nvarchar", "exec", "sysobjects", "syscolumns"
        };
 
        bool ContainsUnwanted(string input) =>
            unwanted.Any(word => input.IndexOf(word, StringComparison.OrdinalIgnoreCase) >= 0);
 
        string RemoveUnwanted(string input)
        {
            foreach (var word in unwanted)
                input = Regex.Replace(input, Regex.Escape(word), "", RegexOptions.IgnoreCase);
            return input;
        }
 
        if (token.Type == JTokenType.Object)
        {
            var obj = (JObject)token;
            var result = new JObject();
 
            foreach (var prop in obj.Properties())
            {
                if (prop.Name.Equals("div", StringComparison.OrdinalIgnoreCase) &&
                    prop.Value.Type == JTokenType.String &&
                    ContainsUnwanted(prop.Value.ToString()))
                {
                    result[prop.Name] = "";
                }
                else
                {
                    result[prop.Name] = Sanitize(prop.Value);
                }
            }
 
            return result;
        }
        else if (token.Type == JTokenType.Array)
        {
            return new JArray(token.Select(Sanitize));
        }
        else if (token.Type == JTokenType.String)
        {
            return RemoveUnwanted(token.ToString());
        }
 
        return token;
    }
